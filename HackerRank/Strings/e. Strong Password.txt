====Question====
https://www.hackerrank.com/challenges/strong-password/problem

====Answer====
function minimumNumber(n, password) {
    let countConstraint = 4;

    const pattern = {
        digit : /[0-9]/,
        lowerEng : /[a-z]/,
        upperEng : /[A-Z]/,
        spc : /[!@#$%^&*()\-+]/
    }

    for(const [key, value] of Object.entries(pattern)){
        console.log(value, password ,value.test(password));
        if(value.test(password)) countConstraint--;
    }
    
    if(n >= 6) return countConstraint;
    else return n+countConstraint >= 6 ? countConstraint : 6-n; 
}

====Comment====
정규표현식을 자주 사용하지 않다보니, -에 대한 정규표현식을 그대로 넣었다가
한 문제가 틀린 불상사로 인하여 시간을 10분 정도 더 소모하였다.
그냥 -가 아닌 \-을 넣어야 -가 범위를 나타내는 것이 아닌 특수 문자 그대로 인식되기 때문이다.

처음엔 const digit, lower~ 이런 방식으로 코드를 길게 써놓았는데,
Object를 이용하여 삽입하고, for문을 통해서 코드를 최대한 깔끔하게 써놓았다.
정규표현식에 따라 제약조건의 수를 줄이고, 문제에 따라 답을 반환하였다.