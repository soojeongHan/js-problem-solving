====Question====
An array A consisting of N integers is given. The dominator of array A is the value that occurs in more than half of the elements of A.

For example, consider array A such that

 A[0] = 3    A[1] = 4    A[2] =  3
 A[3] = 2    A[4] = 3    A[5] = -1
 A[6] = 3    A[7] = 3
The dominator of A is 3 because it occurs in 5 out of 8 elements of A (namely in those with indices 0, 2, 4, 6 and 7) and 5 is more than a half of 8.

Write a function

function solution(A);

that, given an array A consisting of N integers, returns index of any element of array A in which the dominator of A occurs. The function should return −1 if array A does not have a dominator.

For example, given array A such that

 A[0] = 3    A[1] = 4    A[2] =  3
 A[3] = 2    A[4] = 3    A[5] = -1
 A[6] = 3    A[7] = 3
the function may return 0, 2, 4, 6 or 7, as explained above.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [0..100,000];
each element of array A is an integer within the range [−2,147,483,648..2,147,483,647].

====Answer====

function solution(A) {
    let map = new Map();
    
    for(let i = 0, len = A.length; i < len; i++) {
        let key = A[i];
        if(map.has(key)) map.get(key).push(i);
        else map.set(key, [i]);
    }
    
    const halfNumber = Math.trunc(A.length/2);
    for(let [key, value] of map) {
        if(value.length > halfNumber) return value[0];
    }
    return -1;
}

====Comment=====
Detected time complexity:
O(N*log(N)) or O(N)
https://app.codility.com/demo/results/trainingX6R5UW-9XM/

좀 더 자바스크립트에 적응해야겠다는 생각이 드는 문제였다.
