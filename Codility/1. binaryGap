function solution(N) {
    // N을 2진수로 변환
    const binaryNum = N.toString(2);
    // 시작부터 1의 값을 가진 위치와 끝부터 1의 값을 가진 위치를 잘라낸다.
    const binaryGaps = binaryNum.slice(binaryNum.indexOf('1') + 1, 
                                       binaryNum.lastIndexOf('1'));
    // 0의 길이를 Map으로 반환한다.                                       
    const zeroCounted = binaryGaps.split('1').map(zeros => zeros.length);
    // zeroCounted가 0이 아니면 최대 값을 찾아 return하고,
    // 0이면 0을 return한다.
    return zeroCounted.length ? Math.max(...zeroCounted) : 0;
}
