====Question====

This is a demo task.

Write a function:

function solution(A);

that, given an array A of N integers, returns the smallest positive integer (greater than 0) that does not occur in A.

For example, given A = [1, 3, 6, 4, 1, 2], the function should return 5.

Given A = [1, 2, 3], the function should return 4.

Given A = [−1, −3], the function should return 1.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [1..100,000];
each element of array A is an integer within the range [−1,000,000..1,000,000].

====Answer====

Detected time complexity:
O(N) or O(N * log(N))
function solution(A) {
    let answer = 1;
    A = A.filter(i=>i>0).sort((a,b)=>a-b);
    for(let i = 0, len = A.length; i<len; i++) {
        if(A[i] === answer) answer++;
    }
    
    return answer;
}

====Comment====

너무 어렵게 생각한 것 같다. 단순하게 배열을 Nagative Number를 filtering하고, Ascending Sorting한다.
for문을 이용하여 1부터 A 배열 전체까지 순회하여, 값을 비교하고 같으면 Answer 변수를 증가시킨다.
그리고 Answer를 Return한다.
