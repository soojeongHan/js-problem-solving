====Answer====
const calGcd = (min, max) =>{
  return (min % max) === 0 ? max : calGcd(max, min % max);
}
const calLcm = (min, max) =>{
  return min * max / calGcd(min, max);
}

const solution = (a, b) => {
    const minNum = Math.min(a, b);
    const maxNum = Math.max(a, b);
    const gcd = calGcd(minNum, maxNum);
    const lcm = calLcm(minNum, maxNum);
    return [gcd, lcm];
}
====Comment====
https://swess.tistory.com/13
유클리드 호제법
  최대공약수 : 
    2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a>b)  
    a와 b의 최대공약수는 b와 r의 최대공약수와 같다.
  최소공배수 :
    해당 성질에 따라, b를 r로 나눈 나머지 r'를 구하고, 
    다시 r을 r'로 나눈 나머지를 구하는 과정을 반복하여 나머지가 0이 되었을 때 나누는 수가 a와 b의 최대공약수이다.
