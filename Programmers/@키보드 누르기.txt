====Answer====
// Phone의 index대로 만들어 배열을 반환한다.
const createPhoneArray = () => {
    const array = [];
    for(let i = 0; i < 4; i++) {
        for(let j = 0; j < 3; j++) {
            array.push([i,j])
        }
    }
    return array;
}

/* 각각의 x와 x를 빼서 절대값으로 변환한 값과
   각각의 y와 y를 빼서 절대값으로 변환한 값을 더하여 반환한다.
*/
const countDistanceHand = (lh, index) => {
    return Math.abs(lh[0]-index[0])+Math.abs(lh[1]-index[1])
}

const solution = (numbers, hand) => {
    // left, right의 배열 중에서 해당 값이 있으면 그 hand로 처리한다.
    const left = [1,4,7];
    const right = [3,6,9];
    
    // phone = [[ 0, 0 ], [ 0, 1 ], [ 0, 2 ], [ 1, 0 ], [ 1, 1 ], [ 1, 2 ], [ 2, 0 ], [ 2, 1 ], [ 2, 2 ], [ 3, 0 ], [ 3, 1 ], [ 3, 2 ]]
    const phone = createPhoneArray();
    
    // last move left hand
    let lh = 9; // *
    // last move right hand
    let rh = 11; // #
    
    // numbers 배열의 하나의 값마다 "L" 또는 "R"의 값이 들어가므로 map Method을 이용하였다.
    return numbers.map((value) => {
        // 반드시 left hand가 만지는 1,4,7의 경우
        if(left.includes(value)) {
            lh = value-1;
            return "L";
        }
        // 반드시 right hand가 만지는 3,6,9의 경우
        else if(right.includes(value)) {
            rh = value-1;
            return "R";
        }
        // 어떤 hand가 만져야되는지 모르는 2,5,8,0의 경우
        else {
            // 0은 10으로 변환한다. ?= phone array에서 0에 해당하는 index기 때문에,
            // phone의 index로 value-1로 계산하여 반환한다.
            const index = value === 0 ? 10 : value-1;
            
            // hand부터 해당 number의 index까지의 거리를 계산한다.
            const distanceFromLeft = countDistanceHand(phone[lh], phone[index]);
            const distanceFromRight = countDistanceHand(phone[rh], phone[index]);
            
            // 거리를 계산하여 반환한다.
            if(distanceFromLeft < distanceFromRight || (distanceFromLeft === distanceFromRight && hand === "left")) {
                lh = index;
                return "L";
            }
            // 아래 if문의 조건을 제외해도 되지만, 정확한 조건을 판별하기 위해 제외하지 않는다.
            else if(distanceFromLeft > distanceFromRight || (distanceFromLeft === distanceFromRight && hand === "right")) {
                rh = index;
                return "R";
            }
        }
    }).join("");
}
====Comment====
